[{"/home/andrius/Development/html-xml-tag-analyser/frontend/src/index.tsx":"1","/home/andrius/Development/html-xml-tag-analyser/frontend/src/App.tsx":"2","/home/andrius/Development/html-xml-tag-analyser/frontend/src/pages/index.ts":"3","/home/andrius/Development/html-xml-tag-analyser/frontend/src/helpers/index.ts":"4","/home/andrius/Development/html-xml-tag-analyser/frontend/src/helpers/store.ts":"5","/home/andrius/Development/html-xml-tag-analyser/frontend/src/pages/404.tsx":"6","/home/andrius/Development/html-xml-tag-analyser/frontend/src/pages/MainPage.tsx":"7","/home/andrius/Development/html-xml-tag-analyser/frontend/src/pages/503.tsx":"8","/home/andrius/Development/html-xml-tag-analyser/frontend/src/reducers/index.ts":"9","/home/andrius/Development/html-xml-tag-analyser/frontend/src/actions/index.ts":"10","/home/andrius/Development/html-xml-tag-analyser/frontend/src/components/index.tsx":"11","/home/andrius/Development/html-xml-tag-analyser/frontend/src/reducers/history.reducer.ts":"12","/home/andrius/Development/html-xml-tag-analyser/frontend/src/actions/api.actions.ts":"13","/home/andrius/Development/html-xml-tag-analyser/frontend/src/components/Button/Button.tsx":"14","/home/andrius/Development/html-xml-tag-analyser/frontend/src/components/Input/Input.tsx":"15","/home/andrius/Development/html-xml-tag-analyser/frontend/src/components/SiteWrapper/SiteWrapper.tsx":"16","/home/andrius/Development/html-xml-tag-analyser/frontend/src/components/HistoryEntry/HistoryEntry.tsx":"17","/home/andrius/Development/html-xml-tag-analyser/frontend/src/components/Stats/Stats.tsx":"18","/home/andrius/Development/html-xml-tag-analyser/frontend/src/types/index.ts":"19","/home/andrius/Development/html-xml-tag-analyser/frontend/src/types/requests.ts":"20","/home/andrius/Development/html-xml-tag-analyser/frontend/src/types/error.ts":"21","/home/andrius/Development/html-xml-tag-analyser/frontend/src/types/states.ts":"22","/home/andrius/Development/html-xml-tag-analyser/frontend/src/types/actions.ts":"23"},{"size":508,"mtime":1611308974060,"results":"24","hashOfConfig":"25"},{"size":952,"mtime":1611308678927,"results":"26","hashOfConfig":"25"},{"size":137,"mtime":1611308804775,"results":"27","hashOfConfig":"25"},{"size":25,"mtime":1611308625619,"results":"28","hashOfConfig":"25"},{"size":648,"mtime":1611308637147,"results":"29","hashOfConfig":"25"},{"size":236,"mtime":1611308646959,"results":"30","hashOfConfig":"25"},{"size":6686,"mtime":1611308780607,"results":"31","hashOfConfig":"25"},{"size":189,"mtime":1611308821116,"results":"32","hashOfConfig":"25"},{"size":602,"mtime":1611308752655,"results":"33","hashOfConfig":"25"},{"size":31,"mtime":1611308445934,"results":"34","hashOfConfig":"25"},{"size":278,"mtime":1611308614759,"results":"35","hashOfConfig":"25"},{"size":1431,"mtime":1611308768559,"results":"36","hashOfConfig":"25"},{"size":1190,"mtime":1611308386966,"results":"37","hashOfConfig":"25"},{"size":706,"mtime":1611308522527,"results":"38","hashOfConfig":"25"},{"size":1379,"mtime":1611308561743,"results":"39","hashOfConfig":"25"},{"size":356,"mtime":1611308581499,"results":"40","hashOfConfig":"25"},{"size":427,"mtime":1611308537771,"results":"41","hashOfConfig":"25"},{"size":1072,"mtime":1611308600523,"results":"42","hashOfConfig":"25"},{"size":106,"mtime":1611308715075,"results":"43","hashOfConfig":"25"},{"size":52,"mtime":1611308707435,"results":"44","hashOfConfig":"25"},{"size":53,"mtime":1611308725127,"results":"45","hashOfConfig":"25"},{"size":449,"mtime":1611308690875,"results":"46","hashOfConfig":"25"},{"size":650,"mtime":1611308732595,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"1qy5ovy",{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"50"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"50"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"50"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"50"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"50"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"50"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"/home/andrius/Development/html-xml-tag-analyser/frontend/src/index.tsx",[],[],"/home/andrius/Development/html-xml-tag-analyser/frontend/src/App.tsx",[],"/home/andrius/Development/html-xml-tag-analyser/frontend/src/pages/index.ts",[],"/home/andrius/Development/html-xml-tag-analyser/frontend/src/helpers/index.ts",[],"/home/andrius/Development/html-xml-tag-analyser/frontend/src/helpers/store.ts",[],"/home/andrius/Development/html-xml-tag-analyser/frontend/src/pages/404.tsx",[],"/home/andrius/Development/html-xml-tag-analyser/frontend/src/pages/MainPage.tsx",["101","102"],"import React, { useEffect, useState, useRef } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { GlobalReduxState, UrlEntry } from \"../types\";\nimport { apiActions } from \"../actions\";\nimport { SiteWrapper, Button, Input, HistoryEntry, Stats } from \"../components\";\nimport { RouteComponentProps } from \"react-router-dom\";\nimport { Row, Col } from \"react-grid-system\";\nimport UrlSvg from \"../assets/vectors/icon-url.svg\";\nimport Logo from \"../assets/vectors/logo.svg\";\nimport Close from \"../assets/vectors/close.svg\";\n\nconst MainPage = (props: RouteComponentProps): JSX.Element => {\n  const [url, setUrl] = useState<string>(\"\");\n  const [displayResults, setDisplayResults] = useState<boolean>(false);\n\n  const [stats, setStats] = useState<UrlEntry | null>(null);\n\n  const [validationError, setValidationError] = useState<string | null>(null);\n\n  const dispatch = useDispatch();\n  // Use refs ability to hold value as recommended in https://reactjs.org/docs/hooks-reference.html#useref\n  // We will leverage it to detect initial render\n  const initialRender = useRef(true);\n\n  const { history, apiError, loading } = useSelector(\n    (state: GlobalReduxState) => ({\n      history: state.historyReducer.entries,\n      apiError: state.historyReducer.error,\n      loading: state.historyReducer.loading,\n    })\n  );\n\n  useEffect(() => {\n    // Always take the initial stats from history\n    setStats(history[0]);\n    // Show stats when history changes - but NOT on the initial page render\n    initialRender.current\n      ? (initialRender.current = false)\n      : setDisplayResults(true);\n    setUrl(\"\");\n  }, [history]);\n\n  const validateFields = () => {\n    setValidationError(null); //Reset existing errors if any\n    let error = null as null | string; // Define new empty error message (initial)\n    const urlFormat = /^https?:\\/\\/(www\\.)?[-a-zA-Z0-9@:%._+~#=]{1,256}\\.[a-zA-Z0-9()]{1,6}\\b([-a-zA-Z0-9()@:%_+.~#?&//=]*)$/;\n    const httpFormat = /^https?:\\/\\//;\n    if (!urlFormat.test(String(url).toLowerCase()))\n      error = \"Please enter valid URL\";\n    if (!httpFormat.test(String(url).toLowerCase()))\n      error = \"URL should start with http:// or https://\";\n    if (url.length > 50)\n      error = \"Only URLs up to 50 characters are currently accepted\";\n\n    if (error) {\n      setValidationError(error); // Save collected message to state if any..\n    } else {\n      dispatch(apiActions.analyze(url)); // Validation succeeded - call backend for analysis\n    }\n  };\n\n  const retrieveHistoryItem = (index: number) => {\n    setStats(history[index]);\n    setDisplayResults(true);\n  };\n\n  return (\n    <>\n      <div className=\"page--background\">\n        <div className=\"content\">\n          <SiteWrapper>\n            <Row justify=\"center\">\n              <Col lg={4} md={6} sm={12}>\n                <div className=\"form__container\">\n                  <img\n                    src={Logo}\n                    alt=\"Tag logo\"\n                    style={{ width: \"20%\", marginBottom: \"32px\" }}\n                  />\n\n                  <div className=\"flip__wrapper\">\n                    <div\n                      className={\n                        displayResults ? \"hover panel flip\" : \"hover panel\"\n                      }\n                    >\n                      <div className=\"front__form\">\n                        <div className=\"front__form__box\">\n                          <form\n                            noValidate\n                            onSubmit={(e: any) => {\n                              e.preventDefault();\n                            }}\n                          >\n                            <Input\n                              id=\"url-input\"\n                              type=\"text\"\n                              label=\"\"\n                              placeholder=\"Enter valid URL here\"\n                              autocomplete=\"url\"\n                              error={validationError ? validationError : \"\"}\n                              value={url}\n                              handleChange={setUrl}\n                              className=\"input mb--32\"\n                              icon={UrlSvg}\n                            />\n\n                            <Button\n                              id=\"url-submit-button\"\n                              label={\n                                loading\n                                  ? \"\"\n                                  : \"Run document tag structure analysis\"\n                              }\n                              className=\"button button--big button--lime\"\n                              handleClick={validateFields}\n                              loading={loading}\n                              disabled={loading}\n                            />\n\n                            {validationError && (\n                              <span className=\"error__message\">\n                                {validationError}\n                              </span>\n                            )}\n                            {apiError && (\n                              <span className=\"error__message\">\n                                {apiError.message}\n                              </span>\n                            )}\n                          </form>\n                        </div>\n                      </div>\n\n                      <div className=\"back__stats\">\n                        <div className=\"back__stats_box\">\n                          <img\n                            src={Close}\n                            alt=\"Close stats\"\n                            title=\"Close stats\"\n                            className=\"close\"\n                            onClick={() => setDisplayResults(false)}\n                          />\n\n                          <Stats entry={stats} />\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n\n                <div className=\"history__container\">\n                  {history.length > 0 && (\n                    <div className=\"history__container__title mb--24\">\n                      <span>History:</span>\n                    </div>\n                  )}\n\n                  {history.map((item: UrlEntry, index: number) => {\n                    return (\n                      <HistoryEntry\n                        url={item.url}\n                        key={item.url}\n                        handler={() => retrieveHistoryItem(index)}\n                      />\n                    );\n                  })}\n                </div>\n              </Col>\n            </Row>\n          </SiteWrapper>\n        </div>\n      </div>\n    </>\n  );\n};\nexport default MainPage;\n","/home/andrius/Development/html-xml-tag-analyser/frontend/src/pages/503.tsx",[],"/home/andrius/Development/html-xml-tag-analyser/frontend/src/reducers/index.ts",[],"/home/andrius/Development/html-xml-tag-analyser/frontend/src/actions/index.ts",[],"/home/andrius/Development/html-xml-tag-analyser/frontend/src/components/index.tsx",[],"/home/andrius/Development/html-xml-tag-analyser/frontend/src/reducers/history.reducer.ts",["103"],"import {\n  ANALYSIS_START,\n  ANALYSIS_SUCCESS,\n  ANALYSIS_ERROR,\n  HistoryState,\n  AnalysisStartAction,\n  AnalysisSuccessAction,\n  AnalysisErrorAction,\n  UrlEntry,\n} from \"../types\";\n\nconst initialState = {\n  loading: false,\n  error: null,\n  entries: [],\n} as HistoryState;\n\nconst historyReducer = (\n  state = initialState,\n  action: AnalysisStartAction | AnalysisSuccessAction | AnalysisErrorAction\n) => {\n  switch (action.type) {\n    case ANALYSIS_START: {\n      return {\n        ...state,\n        loading: true,\n        authenticated: false,\n      } as HistoryState;\n    }\n    case ANALYSIS_SUCCESS: {\n      const newEntry = {\n        ...action.payload.stats,\n        timestamp: Date.now(),\n      } as UrlEntry; // Add timestamp\n      const entries = state.entries.filter(\n        (item: UrlEntry) => item.url !== newEntry.url\n      ); // Filter out previously created duplicates if any\n\n      return {\n        ...state,\n        loading: false,\n        error: null,\n        entries: [newEntry, ...entries].slice(0, 5), // Limit amount of entries to 5 by removing oldest\n      } as HistoryState;\n      // TODO: Consider more inteligent filter to identify same urls with http/https prefixes\n    }\n    case ANALYSIS_ERROR:\n      return {\n        ...state,\n        loading: false,\n        error: action.payload.error,\n      } as HistoryState;\n\n    default:\n      return state as HistoryState;\n  }\n};\n\nexport default historyReducer;\n","/home/andrius/Development/html-xml-tag-analyser/frontend/src/actions/api.actions.ts",["104"],"import axios from \"axios\";\nimport { Dispatch } from \"redux\";\nimport {\n  ANALYSIS_START,\n  ANALYSIS_SUCCESS,\n  ANALYSIS_ERROR,\n  AnalysisRequest,\n} from \"../types\";\n\nconst analyze = (url: string) => {\n  return async (dispatch: Dispatch) => {\n    try {\n      dispatch({ type: ANALYSIS_START });\n\n      const query = {\n        url: url,\n      } as AnalysisRequest;\n\n      const response = await axios.post(\"/process-tags\", query);\n\n      // Slow down a bit for some UI elegance\n      setTimeout(() => {\n        if (response.status === 200) {\n          dispatch({\n            type: ANALYSIS_SUCCESS,\n            payload: { url: url, stats: { ...response.data } },\n          });\n        } else {\n          dispatch({\n            type: ANALYSIS_ERROR,\n            payload: {\n              error: {\n                message: \"Request failed debug needed\",\n              },\n            },\n          });\n        }\n      }, 900);\n    } catch (error) {\n      dispatch({\n        type: ANALYSIS_ERROR,\n        payload: {\n          error: {\n            message: \"Connectivity issues, unreachable URL or other error\",\n          },\n        },\n      });\n    }\n  };\n};\n\nexport const apiActions = { analyze };\n","/home/andrius/Development/html-xml-tag-analyser/frontend/src/components/Button/Button.tsx",["105"],"import React from \"react\";\n\ninterface ButtonProps {\n  id: string;\n  label: string;\n  handleClick: any;\n  className?: string;\n  type?: \"button\" | \"submit\" | \"reset\";\n  disabled?: boolean;\n  loading?: boolean;\n}\n\nconst Button = (props: ButtonProps): JSX.Element => {\n  const { id, label, type, handleClick, disabled, className, loading } = props;\n  const classes = `${className ? className : \"\"}`;\n\n  return (\n    <>\n      <button\n        id={id}\n        type={type}\n        className={classes}\n        onClick={handleClick}\n        disabled={disabled || loading}\n      >\n        <span className=\"button__lable\">{loading ? \"Loading...\" : label}</span>\n      </button>\n    </>\n  );\n};\n\nexport default Button;\n","/home/andrius/Development/html-xml-tag-analyser/frontend/src/components/Input/Input.tsx",["106","107","108","109"],"import React from \"react\";\n\ninterface InputProps {\n  id: string;\n  type: \"text\" | \"password\";\n  handleChange: any;\n  label?: string;\n  value?: any;\n  disabled?: boolean;\n  placeholder?: string;\n  error?: string;\n  className?: string;\n  style?: Record<string, unknown>;\n  tabIndex?: number;\n  autocomplete?: string;\n  icon?: any;\n}\n\nconst Input = (props: InputProps): JSX.Element => {\n  const {\n    id,\n    label,\n    value,\n    disabled,\n    icon,\n    type,\n    placeholder,\n    autocomplete,\n    error,\n    handleChange,\n    className,\n    style,\n    tabIndex,\n  } = props;\n\n  const changeHandler = (e: any) => {\n    handleChange(e.target.value);\n  };\n\n  return (\n    <>\n      {label && (\n        <label htmlFor={id} className=\"input__lable\">\n          {label}\n        </label>\n      )}\n      <div className={error ? `${className} error` : className}>\n        {icon && <img src={icon} alt=\"Input icon\" className=\"input__icon\" />}\n\n        <input\n          autoFocus\n          id={id}\n          type={type}\n          value={value}\n          disabled={disabled}\n          onChange={changeHandler}\n          className=\"input__field\"\n          placeholder={placeholder}\n          style={style}\n          autoComplete={autocomplete}\n          spellCheck=\"false\"\n          autoCorrect=\"off\"\n          tabIndex={tabIndex}\n        />\n      </div>\n    </>\n  );\n};\n\nexport default Input;\n","/home/andrius/Development/html-xml-tag-analyser/frontend/src/components/SiteWrapper/SiteWrapper.tsx",[],"/home/andrius/Development/html-xml-tag-analyser/frontend/src/components/HistoryEntry/HistoryEntry.tsx",["110"],"import React from \"react\";\n\ninterface HistoryEntryProps {\n  url: string;\n  handler: any;\n}\n\nconst HistoryEntry = (props: HistoryEntryProps): JSX.Element => {\n  const { url, handler } = props;\n\n  return (\n    <>\n      <div\n        className=\"history__entry\"\n        onClick={handler}\n        title=\"Click to view previously fetched data\"\n      >\n        <h2>{url}</h2>\n      </div>\n    </>\n  );\n};\n\nexport default HistoryEntry;\n","/home/andrius/Development/html-xml-tag-analyser/frontend/src/components/Stats/Stats.tsx",[],"/home/andrius/Development/html-xml-tag-analyser/frontend/src/types/index.ts",[],"/home/andrius/Development/html-xml-tag-analyser/frontend/src/types/requests.ts",[],"/home/andrius/Development/html-xml-tag-analyser/frontend/src/types/error.ts",[],"/home/andrius/Development/html-xml-tag-analyser/frontend/src/types/states.ts",[],"/home/andrius/Development/html-xml-tag-analyser/frontend/src/types/actions.ts",[],{"ruleId":"111","severity":1,"message":"112","line":12,"column":19,"nodeType":"113","messageId":"114","endLine":12,"endColumn":45},{"ruleId":"115","severity":1,"message":"116","line":91,"column":43,"nodeType":"117","messageId":"118","endLine":91,"endColumn":46,"suggestions":"119"},{"ruleId":"120","severity":1,"message":"121","line":18,"column":24,"nodeType":"122","messageId":"123","endLine":21,"endColumn":5},{"ruleId":"120","severity":1,"message":"121","line":11,"column":10,"nodeType":"122","messageId":"123","endLine":11,"endColumn":39},{"ruleId":"115","severity":1,"message":"116","line":6,"column":16,"nodeType":"117","messageId":"118","endLine":6,"endColumn":19,"suggestions":"124"},{"ruleId":"115","severity":1,"message":"116","line":6,"column":17,"nodeType":"117","messageId":"118","endLine":6,"endColumn":20,"suggestions":"125"},{"ruleId":"115","severity":1,"message":"116","line":8,"column":11,"nodeType":"117","messageId":"118","endLine":8,"endColumn":14,"suggestions":"126"},{"ruleId":"115","severity":1,"message":"116","line":16,"column":10,"nodeType":"117","messageId":"118","endLine":16,"endColumn":13,"suggestions":"127"},{"ruleId":"115","severity":1,"message":"116","line":36,"column":29,"nodeType":"117","messageId":"118","endLine":36,"endColumn":32,"suggestions":"128"},{"ruleId":"115","severity":1,"message":"116","line":5,"column":12,"nodeType":"117","messageId":"118","endLine":5,"endColumn":15,"suggestions":"129"},"@typescript-eslint/no-unused-vars","'props' is defined but never used.","Identifier","unusedVar","@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["130","131"],"@typescript-eslint/explicit-module-boundary-types","Missing return type on function.","ArrowFunctionExpression","missingReturnType",["132","133"],["134","135"],["136","137"],["138","139"],["140","141"],["142","143"],{"messageId":"144","fix":"145","desc":"146"},{"messageId":"147","fix":"148","desc":"149"},{"messageId":"144","fix":"150","desc":"146"},{"messageId":"147","fix":"151","desc":"149"},{"messageId":"144","fix":"152","desc":"146"},{"messageId":"147","fix":"153","desc":"149"},{"messageId":"144","fix":"154","desc":"146"},{"messageId":"147","fix":"155","desc":"149"},{"messageId":"144","fix":"156","desc":"146"},{"messageId":"147","fix":"157","desc":"149"},{"messageId":"144","fix":"158","desc":"146"},{"messageId":"147","fix":"159","desc":"149"},{"messageId":"144","fix":"160","desc":"146"},{"messageId":"147","fix":"161","desc":"149"},"suggestUnknown",{"range":"162","text":"163"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"162","text":"164"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.",{"range":"165","text":"163"},{"range":"165","text":"164"},{"range":"166","text":"163"},{"range":"166","text":"164"},{"range":"167","text":"163"},{"range":"167","text":"164"},{"range":"168","text":"163"},{"range":"168","text":"164"},{"range":"169","text":"163"},{"range":"169","text":"164"},{"range":"170","text":"163"},{"range":"170","text":"164"},[3490,3493],"unknown","never",[98,101],[110,113],[143,146],[324,327],[604,607],[84,87]]